name: Deploy AI Maturity Scan - Clean Resolutions

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Clean environment
        run: |
          rm -rf node_modules package-lock.json || true
          npm cache clean --force
          echo "Environment cleaned successfully"
          
      - name: Install dependencies with resolutions
        run: |
          echo "Installing dependencies with ajv 6.x resolution..."
          npm install --legacy-peer-deps --no-audit --no-fund
          echo "Dependencies installed successfully"
          
      - name: Verify ajv resolution
        run: |
          echo "Checking resolved ajv version..."
          npm list ajv || echo "ajv version check complete"
          echo "Verifying ajv file structure..."
          if [ -f "node_modules/ajv/dist/compile/codegen/index.js" ]; then
            echo "✅ ajv/dist/compile/codegen found - compatible structure"
          else
            echo "❌ ajv/dist/compile/codegen not found"
            ls -la node_modules/ajv/dist/ || echo "ajv dist structure:"
            ls -la node_modules/ajv/dist/compile/ || echo "ajv compile structure:"
          fi
          
      - name: Build application
        run: |
          echo "Starting React build..."
          npm run build
          echo "Build completed successfully!"
        env:
          CI: false
          GENERATE_SOURCEMAP: false
          NODE_OPTIONS: "--max-old-space-size=4096"
          REACT_APP_GITHUB_TOKEN: ${{ secrets.DATA_STORAGE }}
          REACT_APP_ADMIN_PASSWORD: ${{ secrets.REACT_APP_ADMIN_PASSWORD }}
        
      - name: Verify build output
        run: |
          echo "Verifying build output..."
          if [ -d "build" ]; then
            echo "✅ Build directory created"
            echo "Build contents:"
            ls -la build/
            echo "Build size:"
            du -sh build/
          else
            echo "❌ Build directory not found"
            exit 1
          fi
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
